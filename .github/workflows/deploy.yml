name: Deploy wetrip_backend

on:
  push:
    branches: [ 'main' ]

env:
  ECR_REPOSITORY: 926806297566.dkr.ecr.ap-northeast-2.amazonaws.com/wetrip-chat

jobs:
  ci:
    runs-on: ubuntu-24.04
    outputs:
      docker-tag: ${{ steps.set-docker-tag.outputs.DOCKER_TAG }}

    defaults:
      run:
        working-directory: . # ‚≠ê weTrip/main-server Ìè¥Îçî Í∏∞Ï§ÄÏúºÎ°ú ÏûëÏóÖ

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GIT_TOKEN }}
          submodules: true

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Get current time
        id: current-time
        uses: josStorer/get-current-time@v2.0.2
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"

      - name: Configuration AWS crendtials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCOUNT_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-northeast-2

      - name: Login ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker build - main server
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          docker build -f ./main-server/Dockerfile -t whwkahd3/wetrip-main:${{ steps.current-time.outputs.formattedTime }} .
          docker push whwkahd3/wetrip-main:${{ steps.current-time.outputs.formattedTime }}

      - name: Docker build - chat server
        run: |
          docker build -f ./chat-server/Dockerfile -t $ECR_REPOSITORY:${{ steps.current-time.outputs.formattedTime }} .
          docker push $ECR_REPOSITORY:${{ steps.current-time.outputs.formattedTime }}

      - name: Set Docker Tag Output
        id: set-docker-tag
        run: echo 'DOCKER_TAG=${{ steps.current-time.outputs.formattedTime }}' >> $GITHUB_OUTPUT

  cd:
    runs-on: ubuntu-24.04
    needs: [ ci ]
    env:
      DOCKER_TAG: ${{ needs.ci.outputs.docker-tag }}

    steps:
      - name: Configuration AWS crendtials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCOUNT_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-northeast-2

      - name: Login ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Check containers
            echo "üê≥ Checking running containers"
            docker ps -a
            
            # Check docker tags
            echo "üê≥ Docker Tag: ${{ env.DOCKER_TAG }}"

            # AWS ECR login
            aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin 926806297566.dkr.ecr.ap-northeast-2.amazonaws.com
            
            # Pull the new image
            echo "üê≥ Docker Image Pull"
            docker pull whwkahd3/wetrip-main:${{ env.DOCKER_TAG }}
            echo "chat-server pull"
            docker pull $ECR_REPOSITORY:${{ env.DOCKER_TAG }}

            # Stop & Remove existing container if exists
            if [ $(docker ps -aq -f name=wetrip-main) ]; then
              echo "üê≥ Stopping existing container"
              docker stop wetrip-main || true
              docker stop chat-server || true
              echo "üê≥ Removing existing container"
              docker rm wetrip-main || true
              docker rm chat-server || true
            fi
            
            # Copy .env file into the new container
            echo "üìÇ Copying .env file into container"
            docker create --name temp_container whwkahd3/wetrip-main:${{ env.DOCKER_TAG }}
            docker cp /home/ubuntu/wetrip-main/.env temp_container:/app/.env
            docker commit temp_container whwkahd3/wetrip-main:${{ env.DOCKER_TAG }}
            docker rm temp_container
            docker create --name temp_container_chat $ECR_REPOSITORY:${{ env.DOCKER_TAG }}
            docker cp /home/ubuntu/wetrip-main/.env temp_container_chat:/app/.env
            docker commit temp_container_chat $ECR_REPOSITORY:${{ env.DOCKER_TAG }}
            docker rm temp_container_chat
            
            # Start new container
            echo "üê≥ Docker Run"
            docker run -d --name wetrip-main \
              -p 8080:8080 \
              --log-driver json-file \
              --log-opt max-size=10m \
              --log-opt max-file=3 \
              whwkahd3/wetrip-main:${{ env.DOCKER_TAG }}
            docker run -d --name chat-server \
              -p 8081:8081 \
              --log-driver json-file \
              --log-opt max-size=10m \
              --log-opt max-file=3 \
              $ECR_REPOSITORY:${{ env.DOCKER_TAG }}
            
            # Check
            echo "üê≥ Docker ps"
            docker ps
            
            # Cleanup old images
            echo "üßπ Cleaning up old Docker images"
            docker image prune -af --filter "dangling=false"
